import rclpy
from rclpy.node import Node
from your_custom_msgs.msg import ControlCommand  # Define your message type
from pynput import keyboard

class KeyboardController(Node):
    def __init__(self):
        super().__init__('keyboard_controller')
        self.publisher_ = self.create_publisher(ControlCommand, 'deepracer_control', 10)
        self.listener = keyboard.Listener(on_press=self.on_key_press)
        self.listener.start()

    def on_key_press(self, key):
        control_msg = ControlCommand()
        control_msg.speed = 0  # Default to stop
        control_msg.angle = 0  # Default angle

        try:
            if key == keyboard.Key.up:
                control_msg.speed = 1.0  # Move forward
            elif key == keyboard.Key.down:
                control_msg.speed = -1.0  # Move backward
            elif key == keyboard.Key.left:
                control_msg.angle = 10.0  # Turn left
            elif key == keyboard.Key.right:
                control_msg.angle = -10.0  # Turn right
            elif key.char == 'a':
                control_msg.speed = 1.0  # Accelerate
            elif key.char == 's':
                control_msg.speed = 0.0  # Halt/stop
            else:
                return

            self.publisher_.publish(control_msg)
        except AttributeError:
            pass  # Handle special keys if needed

def main(args=None):
    rclpy.init(args=args)
    keyboard_controller = KeyboardController()
    rclpy.spin(keyboard_controller)
    keyboard_controller.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()
